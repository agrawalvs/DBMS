DBMS prac 6
AIM:- Introduction to PL/SQL and execution of PL/SQL Blocks, stored Procedure using Oracle 11g 


Write PL/SQL block to find width from area and height.

SET SERVEROUTPUT ON;
DECLARE
	V_WIDTH INTEGER;
	V_HEIGHT INTEGER :=10;
	V_AREA INTEGER :=20;
BEGIN
	V_WIDTH:= V_AREA/V_HEIGHT;
	DBMS_OUTPUT.PUT_LINE('WIDTH ='|| V_WIDTH);
EXCEPTION 
	WHEN ZERO_DIVIDE THEN
	DBMS_OUTPUT.PUT_LINE('DIVISION BY ZERO');
END;
/

Write PL/SQL block to find maximum number from given number.

DECLARE
  A INT ;
  B INT ;
  C INT ;

BEGIN
  A:=&a;
  B:=&b;
  C:=&c;
  IF(A>B AND A>C) THEN
    DBMS_OUTPUT.PUT_LINE('A IS MAX');
  ELSIF(B>A AND B>C) THEN
    DBMS_OUTPUT.PUT_LINE('B IS MAX');
  ELSE
    DBMS_OUTPUT.PUT_LINE('C IS MAX');
  END IF;
END;
/

Write PL/SQl program for swaping two number.

DECLARE
  A INT ;
  B INT ;
  TEMP INT;

BEGIN 
  A:=&A;
  B:=&B;

  TEMP := A;
  A := B;
  B := TEMP;

  DBMS_OUTPUT.PUT_LINE('A = '|| A ||' B = '||B);
END;
/


CALCULATE AREA OF CIRCLE FOR A VALUE OF RADIUS. STORE A RADIUS AND CORRESPONDING 
VALUES OF CALCULATED AREA IN TABLE AREA CONSISTING OF TWO COLUMN RADIUS DATTYPE NO 
AND AR(AREA)

CREATE TABLE AREA(
RADIUS NUMBER(5),
AR NUMBER(5,2)
);

DECLARE
  RADIUS INT ;
  AREA FLOAT;
BEGIN
  FOR I IN 3..7 LOOP
    RADIUS:=I;
    AREA := 3.145 * POWER(RADIUS,2);
    INSERT INTO AREA(RADIUS,AR) VALUES(RADIUS,AREA);
  END LOOP;
END;
/

SELECT * FROM AREA;
DROP TABLE AREA;



WRITE PL/SQL PROGRAM FOR DISPLAY OF FIBBONACCI SERIES.

DECLARE
  VAL INT ;
  TEMP INT := 0;
  RES INT := 1;
  PREV INT;
BEGIN
  DBMS_OUTPUT.PUT_LINE('RES = '||TEMP);
  DBMS_OUTPUT.PUT_LINE('RES = '||RES);
  VAL := &VAL;

  FOR I IN 2..VAL LOOP
    PREV := RES + TEMP;
    TEMP := RES;
    RES := PREV;
    DBMS_OUTPUT.PUT_LINE('RES = '||RES);
  END LOOP;
END;
/

WRITE PL/SQL PROGRAM FOR CHECKING NUMBER IS PALINDROM OR NOT.

DECLARE
    NUM NUMBER;
    TEMP NUMBER;
    REM NUMBER;
    RES NUMBER:=0;
BEGIN
    NUM:=&NUM;
    TEMP:= NUM;
    WHILE TEMP >0 LOOP
        REM := MOD(TEMP,10);
	RES := (RES*10) + REM;
	TEMP := TRUNC(TEMP/10);
    END LOOP;

    IF NUM = RES THEN
       dbms_output.put_line('true');
    else
        dbms_output.put_line('false');
    end if;
END;
/

WRITE PL/SQL PROGRAM FOR PRINTING BASIC * PATTERN.

DECLARE
    NUM NUMBER;
BEGIN
    NUM:=&NUM;
    FOR I IN 0..(NUM-1) LOOP
	FOR J IN 0..(I) LOOP
            DBMS_OUTPUT.PUT('*') ;
    END LOOP;
    DBMS_OUTPUT.NEW_LINE;
  END LOOP;
END;
/